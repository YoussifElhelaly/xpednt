/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./public/A1-A4/A1.glb 
*/

import React, { useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useLoader } from '@react-three/fiber';
import { GLTFLoader } from 'three/examples/jsm/Addons.js';
import { useRecoilValue } from 'recoil';
import selectFrameAtom from '../../atoms/selectFrame';
import * as THREE from 'three';
import loupeColorAtom from '../../atoms/loupeColor';
import handleYAxisG from '../../utlities/handleYAxisG';

export function Light3d7() {

  const gltf = useLoader(GLTFLoader, '/loupes/2.5G.glb');
  const frame = useRecoilValue(selectFrameAtom)
        const loupeColor = useRecoilValue(loupeColorAtom)
 useEffect(() => {
    gltf.scene.traverse((child) => {
      if ((child.name === "____2003" && child.isMesh )|| (child.name === "____2001" && child.isMesh)){
        child.material.color = new THREE.Color(loupeColor); // Change color to red
        child.material.needsUpdate = true;
      }
      // if (child.name == "平面011" && child.isMesh) {
      //   child.material.color = new THREE.Color(faceColor); // Change color to red
      //   child.material.needsUpdate = true;
      // }
    });
    // gltf.scene.current.parent.remove(gltf.current);
  }, [gltf,loupeColor]);
  return (
    <>
      <primitive object={gltf.scene} position={[-0.025, 0.015, handleYAxisG(frame.id)]} rotation={[ 0,Math.PI * 1.5, 0]}/>
    </>
  
  )
}

useGLTF.preload('/loupes/2.5G.glb')
