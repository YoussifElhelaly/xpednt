/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./public/A1-A4/A1.glb 
*/

import React, { useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useLoader } from '@react-three/fiber';
import { GLTFLoader } from 'three/examples/jsm/Addons.js';
import { useRecoilValue } from 'recoil';
import selectFrameAtom from '../../atoms/selectFrame';
import handleYAxis from '../../utlities/handleYAxis';
import * as THREE from 'three';
import loupeColorAtom from '../../atoms/loupeColor';


export function Light3d1() {

    const gltf = useLoader(GLTFLoader, '/loupes/3.5.glb');
    const frame = useRecoilValue(selectFrameAtom)
    const loupeColor = useRecoilValue(loupeColorAtom)

  useEffect(() => {
    gltf.scene.traverse((child) => {

      if (child.name == "柱体052" && child.isMesh) {
        child.material.color = new THREE.Color(loupeColor); // Change color to red
        child.material.needsUpdate = true;
      }
      // if (child.name == "平面011" && child.isMesh) {
      //   child.material.color = new THREE.Color(faceColor); // Change color to red
      //   child.material.needsUpdate = true;
      // }
    });
    // gltf.scene.current.parent.remove(gltf.current);
  }, [gltf,loupeColor]);

  return (
    <>
      <primitive object={gltf.scene} position={[0.0, 0.015, handleYAxis(frame.id)]} rotation={[ 0,Math.PI / 2, 0]}/>
    </>
  
  )
}

useGLTF.preload('/loupes/3.5.glb')
